language: python
python:
  - 2.7

###
### Add services
###
services:
  - docker


###
### Global variables
###
env:
  global:
    - MY_DOCKER_NAME="my-httpd-docker"


###
### Install
###
install:
  - docker version

  # Build my docker
  - docker build -t cytopia/${MY_DOCKER_NAME} .

  # Pull docker dependencies
  - docker pull cytopia/php-fpm-5.6
  - docker pull cytopia/mysql-5.5

  # Create directories
  - mkdir -p ~/www
  - mkdir -p ~/tmp/host-mysql-sock
  - chmod 777 ~/www
  - chmod 777 ~/tmp/host-mysql-sock

  # Add html and php files
  - echo "Static Html" > ~/www/index.html
  - echo "<?php echo 'Helo world'; ?>" > ~/www/index.php
  - echo "<?php error_reporting(-1); ini_set('display_errors', 1); if (mysqli_connect('127.0.0.1', 'root', '')) { echo 'YES'; } else { echo 'NO ' . mysqli_connect_error(); }" > ~/www/mysql_127.php
  - echo "<?php error_reporting(-1); ini_set('display_errors', 1); if (mysqli_connect('mysql', 'root', ''))     { echo 'YES'; } else { echo 'NO ' . mysqli_connect_error(); }" > ~/www/mysql_rem.php
  - echo "<?php error_reporting(-1); ini_set('display_errors', 1); if (mysqli_connect(gethostbyname('mysql'), 'root', '')) { echo 'YES'; } else { echo 'NO ' . mysqli_connect_error(); }" > ~/www/mysql_ip.php


###
### Disable auto-started daemons
###
before_script:

  # Disable services enabled by default
  # http://docs.travis-ci.com/user/database-setup/#MySQL
  - sudo /etc/init.d/mysql stop || true
  - sudo /etc/init.d/postgresql stop || true
  - sudo service mysql stop || true
  - sudo service postgresql stop || true


###
### Test
###
script:

  ##
  ## 01.) [a](DEBUG) Test plain docker
  ##
  - docker run
      -p 127.0.0.1:80:80
      -e DEBUG_COMPOSE_ENTRYPOINT=1
      --name ${MY_DOCKER_NAME} cytopia/${MY_DOCKER_NAME} &
  - sleep 5

  - docker ps

  - curl localhost
  - curl localhost | grep 'It works'

  - docker stop "$( docker ps | grep  "${MY_DOCKER_NAME}" | awk '{print $1}' )"
  - docker rm "${MY_DOCKER_NAME}"
  ##
  ## 01.) [b](SILENT) Test plain docker
  ##
  - docker run
      -p 127.0.0.1:80:80
      --name ${MY_DOCKER_NAME} cytopia/${MY_DOCKER_NAME} &
  - sleep 5

  - docker ps

  - curl localhost
  - curl localhost | grep 'It works'

  - docker stop "$( docker ps | grep  "${MY_DOCKER_NAME}" | awk '{print $1}' )"
  - docker rm "${MY_DOCKER_NAME}"


  ##
  ## 02.) [a](DEBUG) Test docker with external mounted directory
  ##
  - docker run
      -p 127.0.0.1:80:80
      -v ~/www:/var/www/html
      -e DEBUG_COMPOSE_ENTRYPOINT=1
      --name ${MY_DOCKER_NAME} cytopia/${MY_DOCKER_NAME} &
  - sleep 5

  - docker ps

  - curl localhost
  - curl localhost | grep 'Static Html'

  - curl http://localhost/index.php
  - curl http://localhost/index.php | grep '<?php'

  - docker stop "$( docker ps | grep  "${MY_DOCKER_NAME}" | awk '{print $1}' )"
  - docker rm "${MY_DOCKER_NAME}"
  ##
  ## 02.) [b](SILENT) Test docker with external mounted directory
  ##
  - docker run
      -p 127.0.0.1:80:80
      -v ~/www:/var/www/html
      --name ${MY_DOCKER_NAME} cytopia/${MY_DOCKER_NAME} &
  - sleep 5

  - docker ps

  - curl localhost
  - curl localhost | grep 'Static Html'

  - curl http://localhost/index.php
  - curl http://localhost/index.php | grep '<?php'

  - docker stop "$( docker ps | grep  "${MY_DOCKER_NAME}" | awk '{print $1}' )"
  - docker rm "${MY_DOCKER_NAME}"


  ##
  ## 03.) [a](DEBUG) Test docker with external mounted directory and PHP-FPM support
  ##
  - docker run
      -p 9000:9000
      -v ~/www:/var/www/html
      -e DEBUG_COMPOSE_ENTRYPOINT=1
      --name php cytopia/php-fpm-5.6 &
  - sleep 5

  - docker run
      -p 127.0.0.1:80:80
      -v ~/www:/var/www/html
      -e DEBUG_COMPOSE_ENTRYPOINT=1
      -e PHP_FPM_ENABLE=1
      -e PHP_FPM_SERVER_ADDR=php
      -e PHP_FPM_SERVER_PORT=9000
      --link php:php
      --name ${MY_DOCKER_NAME} cytopia/${MY_DOCKER_NAME} &
  - sleep 5

  - docker ps

  - curl localhost
  - curl localhost | grep 'Static Html'

  - curl http://localhost/index.php
  - curl http://localhost/index.php | grep -q '<?php' && false || true

  - docker stop "$( docker ps | grep  "php" | awk '{print $1}' )"
  - docker stop "$( docker ps | grep  "${MY_DOCKER_NAME}" | awk '{print $1}' )"
  - docker rm "php"
  - docker rm "${MY_DOCKER_NAME}"
  ##
  ## 03.) [b](SILENT) Test docker with external mounted directory and PHP-FPM support
  ##
  - docker run
      -p 9000:9000
      -v ~/www:/var/www/html
      --name php cytopia/php-fpm-5.6 &
  - sleep 5

  - docker run
      -p 127.0.0.1:80:80
      -v ~/www:/var/www/html
      -e PHP_FPM_ENABLE=1
      -e PHP_FPM_SERVER_ADDR=php
      -e PHP_FPM_SERVER_PORT=9000
      --link php:php
      --name ${MY_DOCKER_NAME} cytopia/${MY_DOCKER_NAME} &
  - sleep 5

  - docker ps

  - curl localhost
  - curl localhost | grep 'Static Html'

  - curl http://localhost/index.php
  - curl http://localhost/index.php | grep -q '<?php' && false || true

  - docker stop "$( docker ps | grep  "php" | awk '{print $1}' )"
  - docker stop "$( docker ps | grep  "${MY_DOCKER_NAME}" | awk '{print $1}' )"
  - docker rm "php"
  - docker rm "${MY_DOCKER_NAME}"


  ##
  ## 04.) [a](DEBUG) Test docker with external mounted directory and PHP-FPM support and MySQL support
  ##
  - docker network create -d bridge my_bridge && sleep 2
  # MySQL
  - docker run
      -p 3306:3306
      -e DEBUG_COMPOSE_ENTRYPOINT=1
      -e MYSQL_ROOT_PASSWORD=
      --network=my_bridge
      --name mysql cytopia/mysql-5.5 &
  - sleep 15
  # PHP
  - docker run
      -p 9000:9000
      -v ~/www:/var/www/html
      -e DEBUG_COMPOSE_ENTRYPOINT=1
      -e "FORWARD_PORTS_TO_LOCALHOST=3306:mysql:3306"
      --network=my_bridge
      --link mysql
      --name php cytopia/php-fpm-5.6 &
  - sleep 15
  # HTTP
  - docker run
      -p 127.0.0.1:80:80
      -v ~/www:/var/www/html
      -e DEBUG_COMPOSE_ENTRYPOINT=1
      -e PHP_FPM_ENABLE=1
      -e PHP_FPM_SERVER_ADDR=php
      -e PHP_FPM_SERVER_PORT=9000
      --network=my_bridge
      --link php
      --link mysql
      --name ${MY_DOCKER_NAME} cytopia/${MY_DOCKER_NAME} &
  - sleep 15
  # Show information
  - docker ps
  - docker network ls
  - docker network inspect my_bridge
  # Test connectivity
  - docker exec -ti php ping -c 1 mysql
  - docker exec -ti ${MY_DOCKER_NAME} ping -c 1 mysql

  - docker exec -ti php ping -c 1 ${MY_DOCKER_NAME}
  - docker exec -ti mysql ping -c 1 ${MY_DOCKER_NAME}

  - docker exec -ti ${MY_DOCKER_NAME} ping -c 1 php
  - docker exec -ti ${MY_DOCKER_NAME} ping -c 1 mysql
  # Test webserver
  - curl localhost
  - curl localhost | grep 'Static Html'

  - curl http://localhost/index.php
  - curl http://localhost/index.php | grep -q '<?php' && false || true

  - curl http://localhost/mysql_127.php
  - curl http://localhost/mysql_rem.php
  - curl http://localhost/mysql_ip.php

  - curl http://localhost/mysql_127.php | grep 'YES'
  - curl http://localhost/mysql_rem.php | grep 'YES'
  - curl http://localhost/mysql_ip.php | grep 'YES'
  # Cleanup
  - docker stop "$( docker ps | grep  "mysql" | awk '{print $1}' )"
  - docker stop "$( docker ps | grep  "php" | awk '{print $1}' )"
  - docker stop "$( docker ps | grep  "${MY_DOCKER_NAME}" | awk '{print $1}' )"
  - docker rm "mysql"
  - docker rm "php"
  - docker rm "${MY_DOCKER_NAME}"
  - docker network rm my_bridge
  # Show final docker status information
  - docker ps
  - docker network ls

  ##
  ## 04.) [b](SILENT) Test docker with external mounted directory and PHP-FPM support and MySQL support
  ##
  - docker network create -d bridge my_bridge && sleep 2
  # MySQL
  - docker run
      -p 3306:3306
      -e MYSQL_ROOT_PASSWORD=
      --network=my_bridge
      --name mysql cytopia/mysql-5.5 &
  - sleep 15
  # PHP
  - docker run
      -p 9000:9000
      -v ~/www:/var/www/html
      -e "FORWARD_PORTS_TO_LOCALHOST=3306:mysql:3306"
      --network=my_bridge
      --link mysql
      --name php cytopia/php-fpm-5.6 &
  - sleep 15
  # HTTP
  - docker run
      -p 127.0.0.1:80:80
      -v ~/www:/var/www/html
      -e PHP_FPM_ENABLE=1
      -e PHP_FPM_SERVER_ADDR=php
      -e PHP_FPM_SERVER_PORT=9000
      --network=my_bridge
      --link php
      --link mysql
      --name ${MY_DOCKER_NAME} cytopia/${MY_DOCKER_NAME} &
  - sleep 15
  # Show information
  - docker ps
  - docker network ls
  - docker network inspect my_bridge
  # Test connectivity
  - docker exec -ti php ping -c 1 mysql
  - docker exec -ti ${MY_DOCKER_NAME} ping -c 1 mysql

  - docker exec -ti php ping -c 1 ${MY_DOCKER_NAME}
  - docker exec -ti mysql ping -c 1 ${MY_DOCKER_NAME}

  - docker exec -ti ${MY_DOCKER_NAME} ping -c 1 php
  - docker exec -ti ${MY_DOCKER_NAME} ping -c 1 mysql
  # Test webserver
  - curl localhost
  - curl localhost | grep 'Static Html'

  - curl http://localhost/index.php
  - curl http://localhost/index.php | grep -q '<?php' && false || true

  - curl http://localhost/mysql_127.php
  - curl http://localhost/mysql_rem.php
  - curl http://localhost/mysql_ip.php

  - curl http://localhost/mysql_127.php | grep 'YES'
  - curl http://localhost/mysql_rem.php | grep 'YES'
  - curl http://localhost/mysql_ip.php | grep 'YES'
  # Cleanup
  - docker stop "$( docker ps | grep  "mysql" | awk '{print $1}' )"
  - docker stop "$( docker ps | grep  "php" | awk '{print $1}' )"
  - docker stop "$( docker ps | grep  "${MY_DOCKER_NAME}" | awk '{print $1}' )"
  - docker rm "mysql"
  - docker rm "php"
  - docker rm "${MY_DOCKER_NAME}"
  - docker network rm my_bridge
  # Show final docker status information
  - docker ps
  - docker network ls
